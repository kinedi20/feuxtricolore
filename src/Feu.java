
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import java.awt.Color;
import javax.swing.SwingConstants;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Component;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author FatKine
 */
public class Feu extends javax.swing.JFrame {
    private final int nred = 10;
    private final int nyellow = 5;
    private final int ngreen = 10;
    private ContexteTraffic traffic = new ContexteTraffic();
    
    static int r,y,v;

    private Timer timer;
    /**
     * Creates new form NewJFrame
     */
    public Feu() {
        initComponents();
        
        IRED.setEnabled(true);
        IYELLOW.setEnabled(false);
        IGREEN.setEnabled(false);
        this.setLocationRelativeTo(null);
        start();
    }
    
    private void start(){
        
        int speed = 500;// 1 seconde
        
        r = nred;
        y = nyellow;
        v = ngreen;
        
        
        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if(r>=0){
                    traffic.getStateRed().Handle();
                }
                else if(y>=0){
                    traffic.getStateOrange().Handle();
                }
                else if(v>=0){
                    traffic.getStateGreen().Handle();
                    
                }
                else{
                    IRED.setEnabled(true);
                    IYELLOW.setEnabled(false);
                    IGREEN.setEnabled(false);
                
                    IGREEN.setText(null);
                    r = nred;
                    y = nyellow;
                v = ngreen;
                }
               
            }
        };
        timer = new Timer(speed, action);
        timer.start();
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IYELLOW = new javax.swing.JLabel();
        IRED = new javax.swing.JLabel();
        IRED.setHorizontalAlignment(SwingConstants.LEFT);
        IGREEN = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        IYELLOW.setBackground(Color.LIGHT_GRAY);
        IYELLOW.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        IYELLOW.setForeground(new java.awt.Color(255, 102, 0));
        IYELLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Blank-Yellow-icon (1).png"))); // NOI18N
        IYELLOW.setName("");

        IRED.setBackground(Color.LIGHT_GRAY);
        IRED.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        IRED.setForeground(new java.awt.Color(255, 102, 0));
        IRED.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Trafficlight-red-icon (4).png"))); // NOI18N
        IRED.setName("");

        IGREEN.setBackground(Color.LIGHT_GRAY);
        IGREEN.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        IGREEN.setForeground(new java.awt.Color(255, 102, 0));
        IGREEN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Blank-Green-icon (1).png"))); // NOI18N
        IGREEN.setName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(48)
                    .addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
                        .addComponent(IRED, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IGREEN, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                        .addComponent(IYELLOW, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                    .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(IRED, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(IYELLOW)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(IGREEN)
                    .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.linkSize(SwingConstants.VERTICAL, new Component[] {IYELLOW, IGREEN});
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {IYELLOW, IGREEN});
        getContentPane().setLayout(layout);

        IYELLOW.getAccessibleContext().setAccessibleName("");
        IRED.getAccessibleContext().setAccessibleName("");
        IGREEN.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Feu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Feu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Feu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Feu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Feu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    static javax.swing.JLabel IGREEN;
    static javax.swing.JLabel IRED;
    static javax.swing.JLabel IYELLOW;
    // End of variables declaration//GEN-END:variables
    public javax.swing.JLabel getIGREEN() {
        return IGREEN;
    }

    public void setIGREEN(javax.swing.JLabel iGREEN) {
        IGREEN = iGREEN;
    }

    public javax.swing.JLabel getIRED() {
        return IRED;
    }

    public void setIRED(javax.swing.JLabel iRED) {
        IRED = iRED;
    }

    public javax.swing.JLabel getIYELLOW() {
        return IYELLOW;
    }

    public void setIYELLOW(javax.swing.JLabel iYELLOW) {
        IYELLOW = iYELLOW;
    }

    public ContexteTraffic getTraffic() {
        return traffic;
    }

    public void setTraffic(ContexteTraffic traffic) {
        this.traffic = traffic;
    }

    public int getR() {
        return r;
    }

    public void setR(int r) {
        this.r = r;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    public int getV() {
        return v;
    }

    public void setV(int v) {
        this.v = v;
    }

    public Timer getTimer() {
        return timer;
    }

    public void setTimer(Timer timer) {
        this.timer = timer;
    }

    public int getNred() {
        return nred;
    }

    public int getNyellow() {
        return nyellow;
    }

    public int getNgreen() {
        return ngreen;
    }
}
